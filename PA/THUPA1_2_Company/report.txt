1.DSA构思：
数组存放员工code

2.问题与解决方法：
原来的思路只操作员工数组，正确，但太慢，调试发现主要的耗时操作是C，一旦下班，就要memset整个数组，
效率太低。

虽然每次操作时间是O(1),但是memset大数组仍然耗时太长。

后来参考《习题解析》[2-34]中Bitmap数据结构，可以用少量的内存表示大量数据的状态。但若要Q，依然要靠数组存放
员工的code。但是C操作可以遍历Bitmap中已set的数据来有针对性地clear。
但是这样还是太慢，考虑Bitmap有valid操作，限制了参数r的大小。那么C操作时，只要将Bitmap的top置零，从而使得
所有test操作为假，免去了memset的时间，于是效率大大提升。

3.时间复杂度与空间复杂度：
时间：每次操作只要O(1)的时间
空间：数组n+1，Bitmap需要2*（n+1)，总空间O(3*(n+1))

4.略

5.略
